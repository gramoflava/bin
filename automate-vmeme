#!/bin/sh

# Example for Automator integration as Action
# export PATH="/usr/local/bin:$PATH"
# for f in "$@"
# do
#     ~/bin/automate-vmeme refine "$f"
# done
#

which -s ffmpeg || {
    echo "No ffmpeg found. Try \`brew install ffmpeg'";
    exit 1
}

set -x
CMD="$1"
FILE="$2"
FILE2="$3"

EX="${FILE##*.}"
FN="${FILE%.*}"

case "$CMD" in
    refine)
        mv "$FILE" "$FILE.bak"
        ffmpeg -i "$FILE.bak" -vcodec libx264 -profile:v main -level 3.1 -preset medium -crf 23 -x264-params ref=4 -pix_fmt yuv420p -acodec aac -movflags +faststart -max_muxing_queue_size 9999 -y "$FN.harmonising.mp4"
        mv "$FN.harmonising.mp4" "$FN.mp4"
        ;;
    rotate_cw)
        mv "$FILE" "$FILE.bak"
        ffmpeg -i "$FILE.bak" -vf "transpose=1" -y "$FN.rotating.mp4"
        mv "$FN.rotating.mp4" "$FN.mp4"
        ;;
    rotate_ccw)
        mv "$FILE" "$FILE.bak"
        ffmpeg -i "$FILE.bak" -vf "transpose=3" -y "$FN.rotating.mp4"
        mv "$FN.rotating.mp4" "$FN.mp4"
        ;;
    v+a)
        ffmpeg -i "$FILE" -i "$FILE2" -map 0:v -c:v libx264 -map 1:a -c:a aac -pix_fmt yuv420p -shortest -movflags +faststart "$FILE.mp4"
        ;;
    i+a)
        ffmpeg -loop 1 -i "$FILE" -i "$FILE2" -map 0:v -c:v libx264 -tune stillimage -map 1:a -c:a aac -pix_fmt yuv420p -shortest -movflags +faststart "$FILE.mp4"
        ;;
    *)
        echo "Usage: \`automate-vmeme [harmonise|rotate_cw|rotate_ccw|wide_putin|v+a|i+a] MOVIE'"
esac

exit 0
