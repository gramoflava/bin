#!/bin/sh

MSG_REQ_W2X="Error. No waifu2x found. Try \`brew install imxieyi/waifu2x/waifu2x' or updating your \$PATH."
MSG_REQ_FFMPEG="Error. No ffmpeg found. Try \`brew install ffmpeg' or updating your \$PATH."
MSG_ERR_SOURCE="Error. Source not found:"
MSG_ERR_ADDIN="Error. ADDIN-in not found:"

depends() {
    which -s $1 &>/dev/null
}

match_jpeg() {
    [[ "$1" =~ ^[Jj][Pp][Ee]?[Gg]$ ]]
}

source_prep() {
    source="$1"
    target="$2"

    [ -f "$source" ] || { echo "$MSG_ERR_SOURCE" "$source" >&2; exit 1; }
    mv "$source" "$target" || exit 1
}

usage() {
    depends waifu2x || echo "$MSG_REQ_W2X" >&2
    depends ffmpeg || echo "$MSG_REQ_FFMPEG" >&2

    cat <<EOT
Usage for images: \`automat -i [upscale|denoise|photo] IMAGE [DENOISE:0-4]'
Usage for videos: \`automat -v [refine|cw|ccw|v+a|i+a] MOVIE [ADD-IN]'

Example for Automator integration as Action
export PATH="/usr/local/bin:\$PATH"
for f in "\$@"
do
    ~/bin/automat -i upscale "\$f" 3
done

EOT
}

KIND="$1"
OP="$2"

case "$KIND" in
    -i)
        SOURCE="$3"
        DENOIZE="$4"

        depends waifu2x || { echo "$MSG_REQ_W2X" >&2; exit 1; }

        FN="${SOURCE%.*}"
        EX="${SOURCE##*.}"

        case "$OP" in
            upscale)
                source_prep "$SOURCE" "$FN~.$EX"
                if match_jpeg "$EX"; then
                    waifu2x -t a -s 2 -n ${DENOISE:-2} -i "$FN~.$EX" -o "$FN.png"
                else
                    waifu2x -t a -s 2 -n ${DENOISE:-0} -i "$FN~.$EX" -o "$FN.png"
                fi
                ;;
            denoise)
                source_prep "$SOURCE" "$FN~.$EX"
                waifu2x -t a -s 1 -n ${DENOISE:-2} -i "$FN~.$EX" -o "$FN.png"
                ;;
            photo)
                source_prep "$SOURCE" "$FN~.$EX"
                waifu2x -t p -s 2 -n ${DENOISE:-3} -i "$FN~.$EX" -o "$FN.png"
                ;;
            *)
                usage; exit 1
                ;;
        esac
        ;;
    -v)
        SOURCE="$3"
        ADDIN="$4"

        depends ffmpeg || { echo "$MSG_REQ_FFMPEG" >&2; exit 1; }

        FN="${SOURCE%.*}"
        EX="${SOURCE##*.}"

        case "$OP" in
            refine)
                source_prep "$SOURCE" "$FN~.$EX"
                ffmpeg -i "$FN~.$EX" -vcodec libx264 -profile:v main -DENOIZE 3.1 -preset medium -crf 23 -x264-params ref=4 -pix_fmt yuv420p -acodec aac -movflags +faststart -max_muxing_queue_size 9999 -y "$FN.mp4"
                ;;
            rotate_cw)
                source_prep "$SOURCE" "$FN~.$EX"
                ffmpeg -i "$FN~.$EX" -vf "transpose=1" -y "$FN.mp4"
                ;;
            rotate_ccw)
                source_prep "$SOURCE" "$FN~.$EX"
                ffmpeg -i "$FN~.$EX" -vf "transpose=3" -y "$FN.mp4"
                ;;
            v+a)
                [ -f "$ADDIN" ] || { echo "$MSG_ERR_ADDIN" "$ADDIN" >&2; exit 1; }
                source_prep "$SOURCE" "$FN~.$EX"
                ffmpeg -i "$FN~.$EX" -i "$ADDIN" -map 0:v -c:v libx264 -map 1:a -c:a aac -pix_fmt yuv420p -shortest -movflags +faststart "$FN.mp4"
                ;;
            i+a)
                [ -f "$ADDIN" ] || { echo "$MSG_ERR_ADDIN" "$ADDIN" >&2; exit 1; }
                ffmpeg -i "$SOURCE" -i "$ADDIN" -map 0:v -c:v libx264 -tune stillimage -map 1:a -c:a aac -pix_fmt yuv420p -shortest -movflags +faststart "$FN.mp4"
                ;;
            *)
                usage; exit 1
                ;;
        esac
        ;;
    *)
        usage; exit 1
        ;;
esac
